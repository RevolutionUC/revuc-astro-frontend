---
interface Props {
    current: string;
}

const { current } = Astro.props;
const navLinks = {
    Home: "/",
    About: "/about",
    Schedule: "/schedule",
    Sponsors: "/sponsors",
    FAQ: "/faq"
}
---

<nav class="bg-white z-50 w-full fixed top-0 p-4">
    <div class="flex flex-row-reverse">
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-8 h-8 cursor-pointer">
            <path d="M4 18L20 18" stroke="#000000" stroke-width="2" stroke-linecap="round"/>
            <path d="M4 12L20 12" stroke="#000000" stroke-width="2" stroke-linecap="round"/>
            <path d="M4 6L20 6" stroke="#000000" stroke-width="2" stroke-linecap="round"/>
        </svg>
    </div>
    <ul class="flex flex-col justify-end space-y-8 text-lg p-6 text-right">
        {
            /* map over the navLinks object and create a link for each key */
            Object.keys(navLinks).map((key) => {
                const link = navLinks[key as keyof typeof navLinks]; /* to make typescript happy */
                return (
                    <li class="flex flex-col justify-end items-end">
                        {
                            /* if the current page is the same as the link, add the active class */
                            current == key.toLowerCase() ?
                            <a class="after:block after:w-full after:h-0.5 after:bg-black" href={link}>{key}</a> :
                            <a class="after:block after:w-full after:h-0.5 after:bg-black after:scale-x-0 hover:after:scale-x-100 after:transition-transform after:origin-right opacity-75 hover:opacity-100" href={link}>{key}</a>
                        }
                    </li>
                )
            })
        }
    </ul>
</nav>