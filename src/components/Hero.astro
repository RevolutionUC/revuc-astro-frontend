---
interface Props {
  siteState: string;
}

const { siteState } = Astro.props; // for updating content depending on the stage of the hackathon
let title = "Revolution".toUpperCase();
let date = "    February 24-25    ".toUpperCase(); // Keep the space in order to match with the RevolutionUC Text
let subText = "Registration opens in:";
let liveSubText = "   Hacking ends in:   ";
---

<!--- Post-register site --><!--- <section id="hero" class="h-screen flex flex-col justify-center items-center space-y-4 bg-black">
    <img src="/revuc_long_white.png" alt="RevolutionUC stylized text" class="w-[50vw] max-md:w-[70vw]" />
    <p class="text-white text-center text-2xl w-[50vw] max-lg:text-xl max-md:text-lg pb-6">Thank you all for participating in this year's RevolutionUC!</p>
    <button class="bg-blue-300 p-6 rounded-lg text-4xl max-lg:text-2xl max-lg:p-4 hover:bg-blue-400 transition-colors tracking-widest">View Submissions</button>
</section>
--->
<div id="hero" class="min-h-screen w-full flex justify-center items-center space-y-4 relative">
  <div id="landscape-grid" class="absolute inset-0"></div>
  <div class="z-10 absolute flex flex-col items-center w-[80vw] max-[1024px]:w-full h-3/4 font-mono space-y-8">
    <div class="glitch w-48 mt-12 relative">
      <img id="logo" src="/favicon.png" alt="RevolutionUC 2024 logo" />
      <div class="glitch__img"></div>
      <div class="glitch__img"></div>
      <div class="glitch__img"></div>
    </div>
    <div class="grid grid-cols-22 gap-2 w-4/5 max-[1024px]:w-11/12 desktop text-white">
      {
        Array.from(title).map((letter) => {
          if (letter === " ") return <div />;
          return (
            <div
              class="row-span-2 col-span-2 text-6xl max-[1024px]:text-lg font-extrabold flex justify-center items-center border shadow-2xl cursor-default min-[1024px]:backdrop-blur-sm transition-transform active:scale-[0.98] hover:scale-[1.02]"
              data-text={letter}
            >
              <span>{letter}</span>
            </div>
          );
        })
      }
      <div
        class="row-span-2 col-span-2 min-[1024px]:border shadow-2xl min-[1024px]:backdrop-blur-sm min-[1024px]:p-2 transition-transform active:scale-[0.98] hover:scale-[1.02]"
      >
        <img
          id="uc-logo"
          src="/revuc_white.png"
          alt="The word UC stylized in the RevolutionUC font"
          class="relative -left-1 max-[1024px]:w-full max-[1024px]:top-0.5"
        />
      </div>
      {
        Array.from(date).map((letter) => {
          if (letter === " ") return <div />;
          return (
            <div
              class="text-4xl max-[1024px]:text-lg min-[1024px]:border font-extrabold flex justify-center items-center shadow-2xl cursor-default backdrop-blur-sm"
              data-text={letter}
            >
              <span>{letter}</span>
            </div>
          );
        })
      }
      {
        Array.from(subText).map((letter) => {
          if (siteState === "pre-registration") {
            if (letter === " ") return <div />;
            return (
              <div
                class="text-4xl max-[1024px]:text-lg min-[1024px]:border font-extrabold flex justify-center items-center shadow-2xl cursor-default backdrop-blur-sm"
                data-text={letter}
              >
                <span>{letter}</span>
              </div>
            );
          }
        })
      }
      { 
        Array.from(liveSubText).map((letter) => {
          if (siteState === "live") {
            if (letter === " ") return <div />;
            return (
              <div
                class="text-4xl max-[1024px]:text-lg min-[1024px]:border font-extrabold flex justify-center items-center shadow-2xl cursor-default backdrop-blur-sm"
                data-text={letter}
              >
                <span>{letter}</span>
              </div>
            );
          }
        })
      }

      <div class="col-span-12 h-[2vw]"></div>
      <a
        id="register-button"
        class="col-start-8 col-span-8 text-[3vw] max-[1024px]:text-[5vw] tracking-widest font-extrabold border-2 flex justify-center items-center cursor-pointer shadow-2xl backdrop-blur-sm transition-all active:scale-[0.99] hover:scale-[1.01] hover:bg-white hover:text-[#f75c03] hover:backdrop-blur-[6px] active:shadow-lg"
        href={siteState === "registration" ? "/registration" : "#"}
      >
        <span>{siteState === "registration" ? "/registration" : "##:##:##"}</span>
      </a>
    </div>
  </div>
</div>

<style is:inline>
  #hero {
    background-image: linear-gradient(#d80368 -12%, #f75c03 100%);
  }
  #landscape-grid {
    background-size: 5vh 5vh, 80px 80px;
    background-image: linear-gradient(to bottom, #d80368 1.5px, transparent 1.5px),
      linear-gradient(to right, #d80368 1.5px, transparent 1.5px);
    animation: moveUp 15s linear infinite forwards;
  }

  .glitch {
    --gap-vertical: 10px;
    --gap-horizontal: 5px;
    --time-anim: 3s;
  }

  .glitch__img {
    position: absolute;
    top: calc(-1 * var(--gap-vertical));
    left: calc(-1 * var(--gap-horizontal));
    width: calc(100% + var(--gap-horizontal) * 2);
    height: calc(100% + var(--gap-vertical) * 2);
    background: url("/favicon.png") no-repeat 50% 0;
    background-size: cover;
    z-index: 10;
  }

  /* .glitch__img:nth-of-type(n + 2) {
    opacity: 0;
  } */

  .glitch__img:nth-of-type(1) {
    animation: glitch-anim-1 var(--time-anim) infinite linear alternate;
  }

  .glitch__img:nth-of-type(2) {
    animation: glitch-anim-2 var(--time-anim) infinite linear alternate;
  }

  .glitch__img:nth-of-type(3) {
    animation: glitch-anim-3 var(--time-anim) infinite linear alternate;
  }

  @keyframes glitch-anim-1 {
    0% {
      opacity: 1;
      -webkit-clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
      clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
    }
    4% {
      -webkit-clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
      clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
    }
    8% {
      -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
      clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
    }
    12% {
      -webkit-clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
      clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
    }
    15% {
      -webkit-clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
      clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
    }
    17% {
      -webkit-clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
      clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
    }
    20% {
      -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
      clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
    }
    25% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
      clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
    }
    30% {
      -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
      clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
    }
    34% {
      -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
      clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
    }
    36% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
      clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%);
    }
    39.9% {
      opacity: 1;
      transform: translate3d(var(--gap-horizontal), 0, 0);
    }
    40%,
    100% {
      opacity: 0;
      -webkit-clip-path: polygon(0 0, 0 0, 0 0, 0 0);
      clip-path: polygon(0 0, 0 0, 0 0, 0 0);
    }
  }

  @keyframes glitch-anim-2 {
    0% {
      opacity: 1;
      -webkit-clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%);
      clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%);
    }
    6% {
      -webkit-clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%);
      clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%);
    }
    10% {
      -webkit-clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%);
      clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%);
    }
    14% {
      -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
      clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
    }
    19% {
      -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 40%, 0 40%);
      clip-path: polygon(0 40%, 100% 40%, 100% 40%, 0 40%);
    }
    21% {
      -webkit-clip-path: polygon(0 52%, 100% 52%, 100% 59%, 0 59%);
      clip-path: polygon(0 52%, 100% 52%, 100% 59%, 0 59%);
    }
    26% {
      -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
      clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
    }
    30% {
      -webkit-clip-path: polygon(0 75%, 100% 75%, 100% 75%, 0 75%);
      clip-path: polygon(0 75%, 100% 75%, 100% 75%, 0 75%);
    }
    34% {
      -webkit-clip-path: polygon(0 65%, 100% 65%, 100% 40%, 0 40%);
      clip-path: polygon(0 65%, 100% 65%, 100% 40%, 0 40%);
    }
    38% {
      -webkit-clip-path: polygon(0 45%, 100% 45%, 100% 50%, 0 50%);
      clip-path: polygon(0 45%, 100% 45%, 100% 50%, 0 50%);
    }
    40% {
      -webkit-clip-path: polygon(0 14%, 100% 14%, 100% 33%, 0 33%);
      clip-path: polygon(0 14%, 100% 14%, 100% 33%, 0 33%);
    }
    43.9% {
      opacity: 1;
      transform: translate3d(calc(-1 * var(--gap-horizontal)), 0, 0);
    }
    44%,
    100% {
      opacity: 0;
      transform: translate3d(0, 0, 0);
      -webkit-clip-path: polygon(0 0, 0 0, 0 0, 0 0);
      clip-path: polygon(0 0, 0 0, 0 0, 0 0);
    }
  }

  @keyframes glitch-anim-3 {
    0% {
      opacity: 1;
      transform: translate3d(0, calc(-1 * var(--gap-vertical)), 0) scale3d(-1, -1, 1);
      -webkit-clip-path: polygon(0 1%, 100% 1%, 100% 3%, 0 3%);
      clip-path: polygon(0 1%, 100% 1%, 100% 3%, 0 3%);
    }
    3% {
      -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 9%, 0 9%);
      clip-path: polygon(0 10%, 100% 10%, 100% 9%, 0 9%);
    }
    5% {
      -webkit-clip-path: polygon(0 5%, 100% 5%, 100% 6%, 0 6%);
      clip-path: polygon(0 5%, 100% 5%, 100% 6%, 0 6%);
    }
    6% {
      -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
      clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
    }
    8% {
      -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 10%, 0 10%);
      clip-path: polygon(0 10%, 100% 10%, 100% 10%, 0 10%);
    }
    10% {
      -webkit-clip-path: polygon(0 30%, 100% 30%, 100% 25%, 0 25%);
      clip-path: polygon(0 30%, 100% 30%, 100% 25%, 0 25%);
    }
    11% {
      -webkit-clip-path: polygon(0 15%, 100% 15%, 100% 16%, 0 16%);
      clip-path: polygon(0 15%, 100% 15%, 100% 16%, 0 16%);
    }
    14% {
      -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 39%, 0 39%);
      clip-path: polygon(0 40%, 100% 40%, 100% 39%, 0 39%);
    }
    16% {
      -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
      clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%);
    }
    18% {
      -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 55%, 0 55%);
      clip-path: polygon(0 60%, 100% 60%, 100% 55%, 0 55%);
    }
    19% {
      -webkit-clip-path: polygon(0 30%, 100% 30%, 100% 31%, 0 31%);
      clip-path: polygon(0 30%, 100% 30%, 100% 31%, 0 31%);
    }
    22% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 69%, 0 69%);
      clip-path: polygon(0 70%, 100% 70%, 100% 69%, 0 69%);
    }
    24% {
      -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 41%, 0 41%);
      clip-path: polygon(0 40%, 100% 40%, 100% 41%, 0 41%);
    }
    27% {
      -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 75%, 0 75%);
      clip-path: polygon(0 80%, 100% 80%, 100% 75%, 0 75%);
    }
    28% {
      -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 51%, 0 51%);
      clip-path: polygon(0 50%, 100% 50%, 100% 51%, 0 51%);
    }
    30% {
      -webkit-clip-path: polygon(0 90%, 100% 90%, 100% 90%, 0 90%);
      clip-path: polygon(0 90%, 100% 90%, 100% 90%, 0 90%);
    }
    32% {
      -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
      clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
    }
    34% {
      -webkit-clip-path: polygon(0 100%, 100% 100%, 100% 99%, 0 99%);
      clip-path: polygon(0 100%, 100% 100%, 100% 99%, 0 99%);
    }
    37% {
      -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 71%, 0 71%);
      clip-path: polygon(0 70%, 100% 70%, 100% 71%, 0 71%);
    }
    38.9% {
      opacity: 1;
    }
    39%,
    100% {
      opacity: 0;
      -webkit-clip-path: polygon(0 0, 0 0, 0 0, 0 0);
      clip-path: polygon(0 0, 0 0, 0 0, 0 0);
    }
  }

  @keyframes moveUp {
    0% {
      background-position: 0% 0%;
    }
    100% {
      background-position: 0% -100%;
    }
  }
</style>

<script defer define:vars={{ siteState }}>
  const alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+{}|:<>?~`1234567890-=[]\\;',./";
  function glitchText(el, inpIters) {
    let iters = 0;
    let targetIters = inpIters || Math.floor(Math.random() * 40 + 20);
    if (el.innerText.length === 1) {
      const interval = setInterval(() => {
        el.innerText = alphabet[Math.floor(Math.random() * alphabet.length)];
        iters++;
        if (iters > targetIters) {
          clearInterval(interval);
          el.innerText = el.parentElement.getAttribute("data-text");
        }
      }, 40);
    } else {
      const originalText = el.innerText;
      const interval = setInterval(() => {
        el.innerText = el.innerText
          .split("")
          .map((_, index) => {
            if (index < iters) {
              return originalText[index];
            }
            return alphabet[Math.floor(Math.random() * alphabet.length)];
          })
          .join("");
        iters += 1 / 3;
        if (iters > el.innerText.length) {
          clearInterval(interval);
          el.innerText = originalText;
        }
      }, 40);
    }
  }

  const desktopText = document.querySelectorAll(".desktop > [data-text] > span");
  desktopText.forEach((el) => {
    glitchText(el, Math.floor(Math.random() * 15 + 10)); // Glitch text on page load
    el.onmouseover = (event) => {
      glitchText(event.target, 20);
    };
  });
  const button = document.getElementById("register-button");
  glitchText(button, 35); // Glitch button text on page load

  // if siteState is pre-registration, start countdown until jan 1st 2024
  if (siteState === "pre-registration") {
    const countdown = document.querySelector("#register-button");

    const interval = setInterval(() => {
      const now = new Date();
      const revolution = new Date("2024-01-01T00:00:00-05:00");
      const diff = revolution - now;
      // make sure the countdown always has two digits
      const hours = `${Math.floor(diff / (1000 * 60 * 60))}`.padStart(2, "0");
      const minutes = `${Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))}`.padStart(2, "0");
      const seconds = `${Math.floor((diff % (1000 * 60)) / 1000)}`.padStart(2, "0");

      countdown.innerText = `${hours}:${minutes}:${seconds}`;

      if (diff < 0) {
        clearInterval(interval);
        countdown.innerText = "REGISTER";
      }
    }, 1000);
  }
  // if siteState is live, start countdown until feb 25th 2024 12pm
  if (siteState === "live") {
    const countdown = document.querySelector("#register-button")

    const interval = setInterval(() => {
      const now = new Date();
      const revolution = new Date("2024-02-25T12:00:00-05:00");
      const diff = revolution - now;
      // make sure the countdown always has two digits
      const hours = `${Math.floor(diff / (1000 * 60 * 60))}`.padStart(2, "0");
      const minutes = `${Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))}`.padStart(2, "0");
      const seconds = `${Math.floor((diff % (1000 * 60)) / 1000)}`.padStart(2, "0");

      countdown.innerText = `${hours}:${minutes}:${seconds}`;

      if (diff < 0) {
        clearInterval(interval);
        countdown.innerText = "REGISTER";
      }
    }, 1000);
    
  }

</script>
